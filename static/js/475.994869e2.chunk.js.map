{"version":3,"file":"static/js/475.994869e2.chunk.js","mappings":"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","sources":["components/Molecules/LabelCard/index.tsx","components/Molecules/LabelCard/LabelCard.tsx","configs/pagesModuleConfigs/AddMeetingConfig.ts","pages/Home/index.tsx","pages/Home/Home.tsx","configs/pagesModuleConfigs/HomePageConfig.ts","utils/api/api-transforms/buildings-api-transform.ts","utils/api/gql-queries/add-meeting-gql-query.js","utils/api/tools.ts"],"sourcesContent":["import LabelCard from \"./LabelCard\";\n\nexport default LabelCard;\n","import { Typography, Box } from \"@mui/material\";\nimport { ISubText } from \"../../../interfaces/module-interfaces/home-page-interface\";\nimport \"./LabelCard.Styles.scss\";\n\nexport interface ILabelCardProps {\n  id: string;\n  label?: string;\n  subTexts?: ISubText[];\n  className?: string;\n  handleClick?: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst LabelCard: React.FC<ILabelCardProps> = ({\n  id,\n  label,\n  subTexts,\n  className,\n  handleClick,\n}) => {\n  return (\n    <Box\n      component=\"div\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      className={`cardWrapper ${className}`}\n      key={id}\n      onClick={handleClick}\n    >\n      <Typography className=\"label\">{label}</Typography>\n      {subTexts &&\n        subTexts?.length &&\n        subTexts.map(({ key, label: subTextLabel, value }, index) => (\n          <Typography key={key || index} className=\"value\">{`${\n            subTextLabel ?? \"\"\n          }${value ?? \"\"}`}</Typography>\n        ))}\n    </Box>\n  );\n};\n\nexport default LabelCard;\n","import { IMeetingRoomForm } from \"../../interfaces/module-interfaces/add-meeting-interface\";\n\nexport const MIN_MEETING_DURATION = 30;\n\nexport const getDefaultMeetingRoomForm = (): IMeetingRoomForm => {\n  const [day, month, year] = new Date().toLocaleDateString().split(\"/\");\n  const [hour, minutes] = new Date().toLocaleTimeString().split(\":\");\n  const [endTimeHour, endTimeMinutes] = new Date(\n    new Date().getTime() + 1000 * 60 * 30\n  )\n    .toLocaleTimeString()\n    .split(\":\");\n  return {\n    title: {\n      label: \"Title\",\n      type: \"textfield\",\n      value: \"Untitled Meeting\",\n      error: false,\n    },\n    date: {\n      label: \"Selected Date\",\n      type: \"date\",\n      value: `${year}-${month}-${day}`,\n      error: false,\n    },\n    startTime: {\n      label: \"Start Time\",\n      type: \"time\",\n      value: `${hour}:${minutes}`,\n      error: false,\n    },\n    endTime: {\n      label: \"End Time\",\n      type: \"time\",\n      value: `${endTimeHour}:${endTimeMinutes}`,\n      error: false,\n    },\n    building: {\n      label: \"Building\",\n      type: \"select\",\n      value: \"\",\n      error: false,\n    },\n  };\n};\n","import Home from \"./Home\";\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useQuery } from \"graphql-hooks\";\nimport { toBuildingDataApiTransform } from \"../../utils/api/api-transforms/buildings-api-transform\";\nimport { BUILDINGS_DATA_QUERY } from \"../../utils/api/gql-queries/add-meeting-gql-query\";\nimport LabelCard from \"../../components/Molecules/LabelCard\";\nimport { getDefaultLabelCardFields } from \"../../configs/pagesModuleConfigs/HomePageConfig\";\nimport { ILabelCardFields } from \"../../interfaces/module-interfaces/home-page-interface\";\nimport \"./Home.Styles.scss\";\n\nconst Home: React.FC = () => {\n  const [labelCardFields, setLabelCardFields] = useState<ILabelCardFields[]>(\n    getDefaultLabelCardFields()\n  );\n\n  let navigate = useNavigate();\n\n  const { data: buildingsData } = useQuery(BUILDINGS_DATA_QUERY);\n\n  useEffect(() => {\n    if (buildingsData && buildingsData?.Buildings?.length) {\n      setLabelCardFields(\n        toBuildingDataApiTransform(\n          buildingsData?.Buildings,\n          getDefaultLabelCardFields()\n        )\n      );\n    }\n  }, [buildingsData, setLabelCardFields]);\n\n  return (\n    <div className=\"home-page-container\">\n      <h1>Home</h1>\n      <Box\n        component=\"div\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        {labelCardFields &&\n          labelCardFields?.length > 0 &&\n          labelCardFields.map(({ label, wrapperClass, subTexts, key }) => (\n            <LabelCard\n              id={key}\n              label={label}\n              className={wrapperClass}\n              subTexts={subTexts}\n            />\n          ))}\n        <Button\n          className=\"add-meeting-button\"\n          onClick={() => {\n            navigate(\"/add-meeting\");\n          }}\n        >\n          Add a meeting\n        </Button>\n      </Box>\n    </div>\n  );\n};\nexport default Home;\n","import { ILabelCardFields } from \"../../interfaces/module-interfaces/home-page-interface\";\n\nexport const getDefaultLabelCardFields = (): ILabelCardFields[] => [\n  {\n    key: \"buildings\",\n    label: \"Buildings\",\n    wrapperClass: \"\",\n    subTexts: [\n      {\n        key: \"totalBuildings\",\n        label: \"Total: \",\n        value: \"N/A\",\n      },\n    ],\n  },\n  {\n    key: \"rooms\",\n    label: \"Rooms\",\n    wrapperClass: \"\",\n    subTexts: [\n      {\n        key: \"totalRooms\",\n        label: \"Total: \",\n        value: \"N/A\",\n      },\n      {\n        key: \"freeRooms\",\n        label: \"Free Now: \",\n        value: \"N/A\",\n      },\n    ],\n  },\n  {\n    key: \"meetings\",\n    label: \"Meetings\",\n    wrapperClass: \"\",\n    subTexts: [\n      {\n        key: \"totalMeetingsToday\",\n        label: \"Total meeting today: \",\n        value: \"N/A\",\n      },\n      {\n        key: \"totalMeetingsNow\",\n        label: \"Total meeting goin on now: \",\n        value: \"N/A\",\n      },\n    ],\n  },\n];\n","import {\n  IBuildingsDataApiModel,\n  IMeetingRoomsApiModel,\n  IMeetingsApiModel,\n} from \"../../../interfaces/api-interfaces/buildings-api-interface\";\nimport { ITimeFrame } from \"../../../interfaces/module-interfaces/home-page-interface\";\nimport {\n  IHomePageFields,\n  ISubText,\n  IFieldsKeys,\n  ILabelCardFields,\n} from \"../../../interfaces/module-interfaces/home-page-interface\";\nimport {\n  IFormFieldsKeys,\n  IInputFieldsModel,\n  IMeetingRoomForm,\n} from \"../../../interfaces/module-interfaces/add-meeting-interface\";\nimport { MIN_MEETING_DURATION } from \"../../../configs/pagesModuleConfigs/AddMeetingConfig\";\nimport { convertTimeToMinutes, dateFieldToEpoch } from \"../tools\";\n\nconst iterate = (field?: number) => {\n  let iterator = field;\n  if (typeof iterator !== \"number\") {\n    iterator = 1;\n  } else {\n    iterator++;\n  }\n  return iterator;\n};\n\nexport const isMeetingsClashing = (\n  meeting: IMeetingsApiModel,\n  timeFrame: ITimeFrame\n): boolean => {\n  const meetingDate = meeting?.date;\n\n  /* As Date coming from API is in same format */\n  const requiredDate = timeFrame?.date?.toLocaleDateString();\n  let requiredDateEpoch: number = 0;\n  if (timeFrame?.date?.getTime()) {\n    requiredDateEpoch = Math.floor(timeFrame?.date?.getTime() / (1000 * 60));\n  }\n\n  let meetingStartTimeSeconds: number = 0;\n  let meetingEndTimeSeconds: number = 0;\n  let requiredStartTimeEpoch: number = 0;\n  let requiredEndTimeEpoch: number = 0;\n\n  if (meeting?.startTime) {\n    const [hours, minutes] = meeting?.startTime.split(\":\");\n    if (Number(hours) > 0) meetingStartTimeSeconds = Number(hours) * 60 * 60;\n\n    if (Number(minutes) > 0) meetingStartTimeSeconds += Number(minutes) * 60;\n  }\n  if (meeting?.endTime) {\n    const [hours, minutes] = meeting?.endTime.split(\":\");\n    if (Number(hours) > 0) meetingEndTimeSeconds = Number(hours) * 60 * 60;\n\n    if (Number(minutes) > 0) meetingEndTimeSeconds += Number(minutes) * 60;\n  }\n\n  if (requiredDateEpoch && timeFrame?.startTime)\n    requiredStartTimeEpoch = requiredDateEpoch + timeFrame?.startTime;\n\n  if (requiredDateEpoch && timeFrame?.endTime)\n    requiredEndTimeEpoch = requiredDateEpoch + timeFrame?.endTime;\n  return (\n    meetingDate === requiredDate &&\n    ((requiredStartTimeEpoch > meetingStartTimeSeconds &&\n      requiredStartTimeEpoch < meetingEndTimeSeconds) ||\n      (requiredEndTimeEpoch > meetingStartTimeSeconds &&\n        requiredEndTimeEpoch < meetingEndTimeSeconds))\n  );\n};\n\nexport const getSubTextsWithValue = (\n  subTexts?: ISubText[],\n  homePageFields?: IHomePageFields\n) => {\n  let tempSubTexts: ISubText[] = [];\n  if (subTexts && subTexts?.length) {\n    subTexts.forEach((subText) => {\n      let tempSubText = { ...subText };\n      const key = subText?.key as IFieldsKeys;\n      if (homePageFields && homePageFields[key]) {\n        tempSubText.value = homePageFields[key]?.toString();\n      }\n      tempSubTexts.push(tempSubText);\n    });\n  }\n  return tempSubTexts;\n};\n\nexport const toBuildingDataApiTransform = (\n  buildings: IBuildingsDataApiModel[],\n  labelcardfields: ILabelCardFields[]\n): ILabelCardFields[] => {\n  let fieldsData: IHomePageFields = {};\n  let tempLabelCardFields: ILabelCardFields[] = [];\n  if (buildings && buildings?.length) {\n    let totalBuildings: number | undefined = 0;\n    let totalRooms: number | undefined = 0;\n    let freeRooms: number | undefined = 0;\n    let totalMeetingsToday: number | undefined = 0;\n    let totalMeetingsNow: number | undefined = 0;\n    const timeNow = new Date();\n\n    try {\n      buildings.forEach(({ meetingRooms }: IBuildingsDataApiModel) => {\n        totalBuildings = iterate(totalBuildings);\n        if (meetingRooms && meetingRooms?.length) {\n          meetingRooms.forEach(({ meetings }: IMeetingRoomsApiModel) => {\n            totalRooms = iterate(totalRooms);\n            let isMeetingRoomAvailable = true;\n            if (meetings?.length) {\n              meetings.forEach((meeting: IMeetingsApiModel) => {\n                const { date: meetingDate } = meeting;\n\n                const todaysDate = timeNow.toLocaleDateString();\n                if (meetingDate === todaysDate) {\n                  totalMeetingsToday = iterate(totalMeetingsToday);\n                }\n\n                if (\n                  isMeetingsClashing(meeting, {\n                    date: timeNow,\n                    startTime: convertTimeToMinutes(\n                      timeNow?.toLocaleTimeString()\n                    ),\n                    endTime: convertTimeToMinutes(\n                      timeNow?.toLocaleTimeString()\n                    ),\n                  })\n                ) {\n                  isMeetingRoomAvailable = false;\n                }\n              });\n            }\n            if (isMeetingRoomAvailable) {\n              freeRooms = iterate(freeRooms);\n            } else {\n              totalMeetingsNow = iterate(totalMeetingsNow);\n            }\n          });\n        }\n      });\n\n      fieldsData = {\n        totalBuildings,\n        totalRooms,\n        freeRooms,\n        totalMeetingsToday,\n        totalMeetingsNow,\n      };\n\n      if (labelcardfields && labelcardfields?.length) {\n        labelcardfields.forEach((field) => {\n          let tempSubTexts: ISubText[] = [];\n          if (field?.subTexts?.length) {\n            tempSubTexts = getSubTextsWithValue(field?.subTexts, fieldsData);\n          }\n          tempLabelCardFields?.push({\n            ...field,\n            subTexts: tempSubTexts,\n          });\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      // expected output: ReferenceError: nonExistentFunction is not defined\n      // Note - error messages will vary depending on browser\n    }\n  }\n\n  return tempLabelCardFields;\n};\n\nexport const getAvailableRooms = (\n  building: IBuildingsDataApiModel,\n  meetingRoomForm: IMeetingRoomForm\n): IMeetingRoomsApiModel[] => {\n  let freeMeetingRooms: IMeetingRoomsApiModel[] = [];\n  const { meetingRooms } = building;\n\n  if (meetingRooms && meetingRooms?.length) {\n    meetingRooms.forEach((meetingRoom: IMeetingRoomsApiModel) => {\n      const { meetings } = meetingRoom;\n      let isMeetingRoomAvailable = true;\n      if (meetings && meetings?.length) {\n        meetings.forEach((meeting) => {\n          const date = dateFieldToEpoch(meetingRoomForm?.date?.value as string);\n          const startTime = convertTimeToMinutes(\n            meetingRoomForm?.startTime?.value as string\n          );\n          const endTime = convertTimeToMinutes(\n            meetingRoomForm?.endTime?.value as string\n          );\n          if (date && startTime && endTime) {\n            const meetingRoomSpecs: ITimeFrame = {\n              date,\n              startTime,\n              endTime,\n            };\n            if (isMeetingsClashing(meeting, meetingRoomSpecs)) {\n              isMeetingRoomAvailable = false;\n            }\n          }\n        });\n      }\n      if (isMeetingRoomAvailable) {\n        freeMeetingRooms.push(meetingRoom);\n      }\n    });\n  }\n\n  return freeMeetingRooms;\n};\n\nexport const isFieldValid = (\n  key: IFormFieldsKeys,\n  fieldData: IInputFieldsModel,\n  meetingRoomForm: IMeetingRoomForm\n): boolean => {\n  let isValidField: boolean = true;\n\n  if (!fieldData?.value) {\n    isValidField = false;\n\n    return isValidField;\n  }\n  switch (key) {\n    case \"date\":\n      const [year, month, day] = fieldData?.value.toString().split(\"-\");\n      const [tday, tmonth, tYear] = new Date().toLocaleDateString().split(\"/\");\n\n      if (\n        +new Date(`${month}/${day}/${year}`) <\n        +new Date(`${tmonth}/${tday}/${tYear}`)\n      ) {\n        isValidField = false;\n      }\n      break;\n    case \"startTime\":\n      {\n        const [stHours, stMinutes] = fieldData?.value.toString().split(\":\");\n        const [hoursNow, minutesNow] = new Date()\n          .toLocaleTimeString()\n          .split(\":\");\n        const now: number = 60 * Number(hoursNow) + Number(minutesNow);\n        const startTime: number = 60 * Number(stHours) + Number(stMinutes);\n        if (now > startTime) {\n          isValidField = false;\n        }\n      }\n      break;\n    case \"endTime\":\n      {\n        const [etHours, etMinutes] = fieldData?.value.toString().split(\":\");\n        const [stHours, stMinutes] =\n          meetingRoomForm?.startTime?.value?.toString().split(\":\") || [];\n        const [hoursNow, minutesNow] = new Date()\n          .toLocaleTimeString()\n          .split(\":\");\n        const now: number = 60 * Number(hoursNow) + Number(minutesNow);\n        const startTime: number = 60 * Number(stHours) + Number(stMinutes);\n        const endTime: number = 60 * Number(etHours) + Number(etMinutes);\n        if (now > endTime || startTime + MIN_MEETING_DURATION > endTime) {\n          isValidField = false;\n        }\n      }\n      break;\n  }\n\n  return isValidField;\n};\n","export const MEETING_ROOM_QUERY = `query FetchRoom($id:Int!)\n{\n  Building(id:$id)\n  {\n     id\n    name\n   meetingRooms\n    {\n      name\n      id\n      floor\n      building {\n        id\n        name\n      }\n      meetings{\n        startTime\n        endTime\n        date\n      }\n     \n    }\n   \n  }\n}`;\n\nexport const ADD_MEETING_QUERY = `mutation AddMeeting($id: Int!,$title: String!\n  $date: String!,\n  $startTime: String!,\n  $endTime: String!,\n  $meetingRoomId:Int!) {\n  Meeting(id: $id, title: $title,startTime: $startTime,endTime: $endTime,date: $date, meetingRoomId: $meetingRoomId) {\n    id\n    title\n    startTime\n    endTime\n    date\n\n  }\n}`;\n\nexport const MEETING_QUERY = `\nquery Meeting\n{\n  Meetings\n  {\n    title\n    date\n    startTime\n    endTime\n  }\n}`;\n\nexport const BUILDINGS_DATA_QUERY = `query Building {\n  Buildings {\n    name\n    id\n    meetingRooms {\n      id\n      name\n      floor\n      building {\n        id\n        name\n      }\n      meetings {\n        title\n        date\n        startTime\n        endTime\n      }\n    }\n  }\n}`;\n","export const convertTimeToMinutes = (time: string): number => {\n  if (time) {\n    const [hours, minutes] = time?.toString().split(\":\");\n    return 60 * Number(hours) + Number(minutes);\n  }\n  return 0;\n};\n\nexport const dateFieldToEpoch = (date: string): Date | undefined => {\n  if (date) {\n    const [year, month, day] = date?.toString().split(\"-\");\n    return new Date(`${month}/${day}/${year}`);\n  }\n  return;\n};\n\nexport const localeDateFieldToEpoch = (date: string): Date | undefined => {\n  if (date) {\n    const [day, month, year] = date?.toString().split(\"/\");\n    return new Date(`${month}/${day}/${year}`);\n  }\n  return;\n};\n\nexport const dateFieldToLocaleDate = (date: string): string | undefined => {\n  if (date) {\n    const [year, month, day] = date?.toString().split(\"-\");\n    return `${day}/${month}/${year}`;\n  }\n  return;\n};\n"],"names":["id","label","subTexts","className","handleClick","Box","component","display","flexDirection","onClick","Typography","length","map","index","key","subTextLabel","value","MIN_MEETING_DURATION","getDefaultMeetingRoomForm","Date","toLocaleDateString","split","day","month","year","toLocaleTimeString","hour","minutes","getTime","endTimeHour","endTimeMinutes","title","type","error","date","startTime","endTime","building","useState","wrapperClass","labelCardFields","setLabelCardFields","navigate","useNavigate","buildingsData","useQuery","BUILDINGS_DATA_QUERY","data","useEffect","Buildings","toBuildingDataApiTransform","alignItems","LabelCard","Button","iterate","field","iterator","isMeetingsClashing","meeting","timeFrame","meetingDate","requiredDate","requiredDateEpoch","Math","floor","meetingStartTimeSeconds","meetingEndTimeSeconds","requiredStartTimeEpoch","requiredEndTimeEpoch","hours","Number","buildings","labelcardfields","fieldsData","tempLabelCardFields","totalBuildings","totalRooms","freeRooms","totalMeetingsToday","totalMeetingsNow","timeNow","forEach","meetingRooms","meetings","isMeetingRoomAvailable","convertTimeToMinutes","tempSubTexts","homePageFields","subText","tempSubText","toString","push","getSubTextsWithValue","console","getAvailableRooms","meetingRoomForm","freeMeetingRooms","meetingRoom","dateFieldToEpoch","isFieldValid","fieldData","isValidField","tday","tmonth","tYear","stHours","stMinutes","hoursNow","minutesNow","etHours","etMinutes","now","ADD_MEETING_QUERY","MEETING_QUERY","time","localeDateFieldToEpoch","dateFieldToLocaleDate"],"sourceRoot":""}