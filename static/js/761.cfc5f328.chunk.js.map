{"version":3,"file":"static/js/761.cfc5f328.chunk.js","mappings":"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","sources":["components/Molecules/LabelCard/index.tsx","components/Molecules/LabelCard/LabelCard.tsx","configs/pagesModuleConfigs/AddMeetingConfig.ts","components/Templates/RoomSelectorModal/index.ts","components/Templates/RoomSelectorModal/RoomSelectorModal.tsx","components/Templates/AddMeetingFormTemplate/index.tsx","components/Templates/AddMeetingFormTemplate/AddMeetingFormTemplate.tsx","pages/AddMeeting/index.tsx","pages/AddMeeting/AddMeeting.tsx","utils/api/api-transforms/buildings-api-transform.ts","utils/api/gql-queries/add-meeting-gql-query.js","utils/api/tools.ts"],"sourcesContent":["import LabelCard from \"./LabelCard\";\n\nexport default LabelCard;\n","import { Typography, Box } from \"@mui/material\";\nimport { ISubText } from \"../../../interfaces/module-interfaces/home-page-interface\";\nimport \"./LabelCard.Styles.scss\";\n\nexport interface ILabelCardProps {\n  id: string;\n  label?: string;\n  subTexts?: ISubText[];\n  className?: string;\n  handleClick?: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nconst LabelCard: React.FC<ILabelCardProps> = ({\n  id,\n  label,\n  subTexts,\n  className,\n  handleClick,\n}) => {\n  return (\n    <Box\n      component=\"div\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      className={`cardWrapper ${className}`}\n      key={id}\n      onClick={handleClick}\n    >\n      <Typography className=\"label\">{label}</Typography>\n      {subTexts &&\n        subTexts?.length &&\n        subTexts.map(({ key, label: subTextLabel, value }, index) => (\n          <Typography key={key || index} className=\"value\">{`${\n            subTextLabel ?? \"\"\n          }${value ?? \"\"}`}</Typography>\n        ))}\n    </Box>\n  );\n};\n\nexport default LabelCard;\n","import { IMeetingRoomForm } from \"../../interfaces/module-interfaces/add-meeting-interface\";\n\nexport const MIN_MEETING_DURATION = 30;\n\nexport const getDefaultMeetingRoomForm = (): IMeetingRoomForm => {\n  const [day, month, year] = new Date().toLocaleDateString().split(\"/\");\n  const [hour, minutes] = new Date().toLocaleTimeString().split(\":\");\n  const [endTimeHour, endTimeMinutes] = new Date(\n    new Date().getTime() + 1000 * 60 * 30\n  )\n    .toLocaleTimeString()\n    .split(\":\");\n  return {\n    title: {\n      label: \"Title\",\n      type: \"textfield\",\n      value: \"Untitled Meeting\",\n      error: false,\n    },\n    date: {\n      label: \"Selected Date\",\n      type: \"date\",\n      value: `${year}-${month}-${day}`,\n      error: false,\n    },\n    startTime: {\n      label: \"Start Time\",\n      type: \"time\",\n      value: `${hour}:${minutes}`,\n      error: false,\n    },\n    endTime: {\n      label: \"End Time\",\n      type: \"time\",\n      value: `${endTimeHour}:${endTimeMinutes}`,\n      error: false,\n    },\n    building: {\n      label: \"Building\",\n      type: \"select\",\n      value: \"\",\n      error: false,\n    },\n  };\n};\n","import RoomSelectorModal from \"./RoomSelectorModal\";\n\nexport default RoomSelectorModal;\n","import Button from \"@mui/material/Button\";\nimport Fade from \"@mui/material/Fade\";\nimport Modal from \"@mui/material/Modal\";\nimport LabelCard from \"../../Molecules/LabelCard\";\nimport { IMeetingRoomsApiModel } from \"../../../interfaces/api-interfaces/buildings-api-interface\";\nimport { IModelConfig } from \"../../../interfaces/module-interfaces/add-meeting-interface\";\nimport \"./RoomSelectorModal.Styles.scss\";\n\ninterface IRoomSelectorModal {\n  modalConfig?: IModelConfig;\n  handleClose?: () => void;\n  vacantRooms?: IMeetingRoomsApiModel[];\n  handleCardClick?: (id?: string) => void;\n  bookMeeting?: () => void;\n}\n\nconst RoomSelectorModal = ({\n  modalConfig,\n  handleClose,\n  vacantRooms,\n  handleCardClick,\n  bookMeeting,\n}: IRoomSelectorModal) => {\n  return (\n    <Modal\n      open={modalConfig?.open ?? false}\n      onClose={handleClose}\n      aria-labelledby=\"parent-modal-title\"\n      aria-describedby=\"parent-modal-description\"\n    >\n      <Fade in={modalConfig?.open}>\n        <div className=\"modal-wrapper\">\n          <h1>Please select one of the free rooms</h1>\n          {vacantRooms && vacantRooms?.length > 0 ? (\n            vacantRooms.map(({ name, building, floor, id }, index) => (\n              <LabelCard\n                id={`${id || index}`}\n                className={`room-card ${\n                  modalConfig?.selectedCardId === id && \"selected\"\n                }`}\n                label={name}\n                subTexts={[\n                  {\n                    key: `${building?.id}`,\n                    label: `Building: `,\n                    value: building?.name ?? \"\",\n                  },\n                  {\n                    key: \"floor\",\n                    label: `Floor: `,\n                    value: floor ?? \"\",\n                  },\n                ]}\n                handleClick={() => {\n                  if (handleCardClick) handleCardClick(id);\n                }}\n              />\n            ))\n          ) : (\n            <LabelCard\n              id=\"fallback\"\n              className=\"room-card fallback\"\n              label={\"Sorry,\"}\n              subTexts={[\n                {\n                  key: \"message\",\n                  label: \"There are no available rooms in this building\",\n                },\n              ]}\n            />\n          )}\n          <Button\n            className=\"add-meeting-button\"\n            size=\"medium\"\n            onClick={() => {\n              if (bookMeeting) bookMeeting();\n            }}\n          >\n            Next\n          </Button>\n        </div>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default RoomSelectorModal;\n","import AddMeetingFormTemplate from \"./AddMeetingFormTemplate\";\n\nexport default AddMeetingFormTemplate;\n","import { Dispatch } from \"react\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport {\n  IFormFieldsKeys,\n  IFormKeysAndTypes,\n  IInputFieldsModel,\n  IMeetingRoomForm,\n} from \"../../../interfaces/module-interfaces/add-meeting-interface\";\nimport { MIN_MEETING_DURATION } from \"../../../configs/pagesModuleConfigs/AddMeetingConfig\";\nimport {\n  getAvailableRooms,\n  isFieldValid,\n} from \"../../../utils/api/api-transforms/buildings-api-transform\";\nimport {\n  IBuildingsDataApiModel,\n  IMeetingRoomsApiModel,\n} from \"../../../interfaces/api-interfaces/buildings-api-interface\";\nimport { localeDateFieldToEpoch } from \"../../../utils/api/tools\";\n\ninterface IAddMeetingFormTemplateProps {\n  meetingRoomForm: IMeetingRoomForm;\n  handleMeetingRoomForm: Dispatch<React.SetStateAction<IMeetingRoomForm>>;\n  buildings: IBuildingsDataApiModel[];\n  handleModalState: (open: boolean, rooms: IMeetingRoomsApiModel[]) => void;\n}\n\nconst AddMeetingFormTemplate: React.FC<IAddMeetingFormTemplateProps> = ({\n  meetingRoomForm,\n  handleMeetingRoomForm,\n  buildings,\n  handleModalState,\n}) => {\n  /** Handler function logic **/\n  const handleFieldValueChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    { key, type }: IFormKeysAndTypes\n  ) => {\n    let tempField: IInputFieldsModel = {\n      ...meetingRoomForm[key as IFormFieldsKeys],\n    };\n\n    if (type !== \"select\") {\n      tempField.value = e.currentTarget.value;\n    } else {\n      tempField.value = e.target.value;\n    }\n    const isValid = isFieldValid(\n      key as IFormFieldsKeys,\n      tempField,\n      meetingRoomForm\n    );\n\n    // Special handling for start time in sync with end time\n    if (key === \"startTime\" && isValid) {\n      const todaysDate = new Date().toLocaleDateString();\n      const [stHours, stMinutes] = tempField?.value.toString().split(\":\");\n      const startTime: number = 60 * Number(stHours) + Number(stMinutes);\n      const [etHours, etMinutes] =\n        meetingRoomForm?.endTime?.value?.toString().split(\":\") || [];\n      const endTime: number = 60 * Number(etHours) + Number(etMinutes);\n\n      if (startTime + MIN_MEETING_DURATION >= endTime) {\n        const tempEndTime = { ...meetingRoomForm?.endTime };\n        const [uetHours, uetMinutes] = new Date(\n          Number(localeDateFieldToEpoch(todaysDate)) +\n            (startTime + 30) * 60 * 1000\n        )\n          .toLocaleTimeString()\n          .split(\":\");\n        tempEndTime.value = `${uetHours}:${uetMinutes}`;\n        tempEndTime.error = false;\n        tempField.error = false;\n        handleMeetingRoomForm((prevSpecs: IMeetingRoomForm) => ({\n          ...prevSpecs,\n          [key]: tempField,\n          endTime: tempEndTime,\n        }));\n      } else {\n        tempField.error = false;\n        handleMeetingRoomForm((prevSpecs: IMeetingRoomForm) => ({\n          ...prevSpecs,\n          [key]: tempField,\n        }));\n      }\n    } else {\n      if (isValid) {\n        tempField = {\n          ...tempField,\n          error: false,\n        };\n        updateFormWithKey(key as IFormFieldsKeys, tempField);\n      } else {\n        tempField = {\n          ...meetingRoomForm[key as IFormFieldsKeys],\n          error: true,\n        };\n        updateFormWithKey(key as IFormFieldsKeys, tempField);\n      }\n    }\n  };\n\n  const updateFormWithKey = (\n    key: IFormFieldsKeys,\n    fieldData: IInputFieldsModel\n  ) => {\n    handleMeetingRoomForm((prevSpecs: IMeetingRoomForm) => ({\n      ...prevSpecs,\n      [key]: fieldData,\n    }));\n  };\n  /** Final Form Validator **/\n  const validateMeetingDetailsForm = (): boolean => {\n    let isValid = true;\n    Object.entries(meetingRoomForm).forEach(([key, fieldData]) => {\n      const isValidField: boolean = isFieldValid(\n        key as IFormFieldsKeys,\n        fieldData,\n        meetingRoomForm\n      );\n\n      let tempFieldData: IInputFieldsModel = { ...fieldData };\n      tempFieldData.error = !isValidField;\n      updateFormWithKey(key as IFormFieldsKeys, tempFieldData);\n\n      if (!isValidField) {\n        isValid = false;\n        return;\n      }\n    });\n    return isValid;\n  };\n\n  const submitMeetingDetails = () => {\n    if (validateMeetingDetailsForm()) {\n      if (buildings && buildings?.length && meetingRoomForm?.building?.value) {\n        const building = buildings?.find(\n          ({ id, ...rest }: IBuildingsDataApiModel) =>\n            id === Number(meetingRoomForm?.building?.value)\n        );\n        if (building) {\n          handleModalState(true, getAvailableRooms(building, meetingRoomForm));\n        }\n      }\n    }\n  };\n  return (\n    <>\n      <Box\n        component=\"div\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        className=\"fields-wrapper\"\n        alignSelf=\"center\"\n      >\n        {meetingRoomForm &&\n          Object.entries(meetingRoomForm).map(\n            ([fieldKey, { label, type, value, error }]) => (\n              <Box className=\"field-wrapper\" key={`${fieldKey}-${type}`}>\n                <Typography className=\"label\">{label}</Typography>\n                {\n                  <TextField\n                    key={fieldKey}\n                    select={type === \"select\"}\n                    value={value}\n                    error={error}\n                    required={true}\n                    type={type}\n                    sx={{ m: 1, minWidth: 250 }}\n                    onChange={(e) =>\n                      handleFieldValueChange(\n                        e as React.ChangeEvent<HTMLInputElement>,\n                        { key: fieldKey, type }\n                      )\n                    }\n                  >\n                    {type === \"select\" && (\n                      <MenuItem value={\"\"} key=\"-\">\n                        {\"--\"}\n                      </MenuItem>\n                    )}\n                    {type === \"select\" &&\n                      buildings &&\n                      buildings?.length > 0 &&\n                      buildings?.map((building: IBuildingsDataApiModel) => (\n                        <MenuItem value={building?.id} key={building?.id}>\n                          {building?.name}\n                        </MenuItem>\n                      ))}\n                  </TextField>\n                }\n              </Box>\n            )\n          )}\n      </Box>\n      <Button\n        className=\"add-meeting-button\"\n        size=\"medium\"\n        onClick={submitMeetingDetails}\n      >\n        Next\n      </Button>\n    </>\n  );\n};\n\nexport default AddMeetingFormTemplate;\n","import AddMeeting from \"./AddMeeting\";\n\nexport default AddMeeting;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./AddMeeting.Styles.scss\";\nimport { useMutation, useManualQuery } from \"graphql-hooks\";\nimport { AppRootContext } from \"../../context/AppRootContext\";\nimport {\n  ADD_MEETING_QUERY,\n  BUILDINGS_DATA_QUERY,\n  MEETING_QUERY,\n} from \"../../utils/api/gql-queries/add-meeting-gql-query\";\nimport { IMeetingRoomsApiModel } from \"../../interfaces/api-interfaces/buildings-api-interface\";\nimport RoomSelectorModal from \"../../components/Templates/RoomSelectorModal\";\nimport { getDefaultMeetingRoomForm } from \"../../configs/pagesModuleConfigs/AddMeetingConfig\";\nimport {\n  IMeetingRoomForm,\n  IModelConfig,\n} from \"../../interfaces/module-interfaces/add-meeting-interface\";\nimport { dateFieldToLocaleDate } from \"../../utils/api/tools\";\nimport AddMeetingFormTemplate from \"../../components/Templates/AddMeetingFormTemplate\";\n\nconst AddMeeting: React.FC = () => {\n  /** Variables **/\n  const {\n    appRootState: { snackbar },\n  } = useContext(AppRootContext);\n\n  const [meetingRoomForm, setMeetingRoomForm] = useState<IMeetingRoomForm>(\n    getDefaultMeetingRoomForm()\n  );\n\n  const navigate = useNavigate();\n\n  const [modalConfig, setModalConfig] = useState<IModelConfig>({\n    open: false,\n    rooms: [],\n  });\n\n  /** Queries and hooks initializations **/\n  const [fetchBuildings, { data: buildingsData }] =\n    useManualQuery(BUILDINGS_DATA_QUERY);\n  const [fetchMeetings, { data: MeetingsData }] = useManualQuery(MEETING_QUERY);\n  const [addMeetingRequest] = useMutation(ADD_MEETING_QUERY);\n\n  /** Submit form details **/\n  const bookMeetingRoom = () => {\n    if (modalConfig?.selectedCardId) {\n      const payload = {\n        id: Number(MeetingsData?.Meetings?.length) + 1,\n        title: meetingRoomForm?.title?.value ?? \"New Meeting\",\n        startTime: meetingRoomForm?.startTime?.value,\n\n        endTime: meetingRoomForm?.endTime?.value,\n        meetingRoomId: modalConfig?.selectedCardId,\n        date: dateFieldToLocaleDate(meetingRoomForm?.date?.value as string),\n      };\n      addMeetingRequest({\n        variables: payload,\n      })\n        .then((data) => {\n          navigate(\"/home\");\n        })\n        .catch(() => {});\n    } else {\n      snackbar(\"No Rooms Available\", \"error\");\n    }\n  };\n\n  const handleModalStateFromForm = (\n    open: boolean,\n    rooms: IMeetingRoomsApiModel[]\n  ) => {\n    setModalConfig((prevState) => ({\n      ...prevState,\n      open,\n      rooms,\n    }));\n  };\n\n  /** Lifecycle hooks dependent calls**/\n\n  useEffect(() => {\n    fetchBuildings();\n    fetchMeetings();\n  }, [fetchBuildings, fetchMeetings]);\n\n  return (\n    <div className=\"add-meeting-container\">\n      <h1>Add Meeting</h1>\n      <AddMeetingFormTemplate\n        meetingRoomForm={meetingRoomForm}\n        handleMeetingRoomForm={setMeetingRoomForm}\n        buildings={buildingsData?.Buildings ?? []}\n        handleModalState={handleModalStateFromForm}\n      />\n\n      {modalConfig.open && (\n        <RoomSelectorModal\n          modalConfig={modalConfig}\n          handleClose={() =>\n            setModalConfig((prevConfig) => ({ ...prevConfig, open: false }))\n          }\n          vacantRooms={modalConfig?.rooms}\n          handleCardClick={(id) =>\n            setModalConfig((prevConfig) => ({\n              ...prevConfig,\n              selectedCardId: id,\n            }))\n          }\n          bookMeeting={bookMeetingRoom}\n        />\n      )}\n    </div>\n  );\n};\nexport default AddMeeting;\n","import {\n  IBuildingsDataApiModel,\n  IMeetingRoomsApiModel,\n  IMeetingsApiModel,\n} from \"../../../interfaces/api-interfaces/buildings-api-interface\";\nimport { ITimeFrame } from \"../../../interfaces/module-interfaces/home-page-interface\";\nimport {\n  IHomePageFields,\n  ISubText,\n  IFieldsKeys,\n  ILabelCardFields,\n} from \"../../../interfaces/module-interfaces/home-page-interface\";\nimport {\n  IFormFieldsKeys,\n  IInputFieldsModel,\n  IMeetingRoomForm,\n} from \"../../../interfaces/module-interfaces/add-meeting-interface\";\nimport { MIN_MEETING_DURATION } from \"../../../configs/pagesModuleConfigs/AddMeetingConfig\";\nimport { convertTimeToMinutes, dateFieldToEpoch } from \"../tools\";\n\nconst iterate = (field?: number) => {\n  let iterator = field;\n  if (typeof iterator !== \"number\") {\n    iterator = 1;\n  } else {\n    iterator++;\n  }\n  return iterator;\n};\n\nexport const isMeetingsClashing = (\n  meeting: IMeetingsApiModel,\n  timeFrame: ITimeFrame\n): boolean => {\n  const meetingDate = meeting?.date;\n\n  /* As Date coming from API is in same format */\n  const requiredDate = timeFrame?.date?.toLocaleDateString();\n  let requiredDateEpoch: number = 0;\n  if (timeFrame?.date?.getTime()) {\n    requiredDateEpoch = Math.floor(timeFrame?.date?.getTime() / (1000 * 60));\n  }\n\n  let meetingStartTimeSeconds: number = 0;\n  let meetingEndTimeSeconds: number = 0;\n  let requiredStartTimeEpoch: number = 0;\n  let requiredEndTimeEpoch: number = 0;\n\n  if (meeting?.startTime) {\n    const [hours, minutes] = meeting?.startTime.split(\":\");\n    if (Number(hours) > 0) meetingStartTimeSeconds = Number(hours) * 60 * 60;\n\n    if (Number(minutes) > 0) meetingStartTimeSeconds += Number(minutes) * 60;\n  }\n  if (meeting?.endTime) {\n    const [hours, minutes] = meeting?.endTime.split(\":\");\n    if (Number(hours) > 0) meetingEndTimeSeconds = Number(hours) * 60 * 60;\n\n    if (Number(minutes) > 0) meetingEndTimeSeconds += Number(minutes) * 60;\n  }\n\n  if (requiredDateEpoch && timeFrame?.startTime)\n    requiredStartTimeEpoch = requiredDateEpoch + timeFrame?.startTime;\n\n  if (requiredDateEpoch && timeFrame?.endTime)\n    requiredEndTimeEpoch = requiredDateEpoch + timeFrame?.endTime;\n  return (\n    meetingDate === requiredDate &&\n    ((requiredStartTimeEpoch > meetingStartTimeSeconds &&\n      requiredStartTimeEpoch < meetingEndTimeSeconds) ||\n      (requiredEndTimeEpoch > meetingStartTimeSeconds &&\n        requiredEndTimeEpoch < meetingEndTimeSeconds))\n  );\n};\n\nexport const getSubTextsWithValue = (\n  subTexts?: ISubText[],\n  homePageFields?: IHomePageFields\n) => {\n  let tempSubTexts: ISubText[] = [];\n  if (subTexts && subTexts?.length) {\n    subTexts.forEach((subText) => {\n      let tempSubText = { ...subText };\n      const key = subText?.key as IFieldsKeys;\n      if (homePageFields && homePageFields[key]) {\n        tempSubText.value = homePageFields[key]?.toString();\n      }\n      tempSubTexts.push(tempSubText);\n    });\n  }\n  return tempSubTexts;\n};\n\nexport const toBuildingDataApiTransform = (\n  buildings: IBuildingsDataApiModel[],\n  labelcardfields: ILabelCardFields[]\n): ILabelCardFields[] => {\n  let fieldsData: IHomePageFields = {};\n  let tempLabelCardFields: ILabelCardFields[] = [];\n  if (buildings && buildings?.length) {\n    let totalBuildings: number | undefined = 0;\n    let totalRooms: number | undefined = 0;\n    let freeRooms: number | undefined = 0;\n    let totalMeetingsToday: number | undefined = 0;\n    let totalMeetingsNow: number | undefined = 0;\n    const timeNow = new Date();\n\n    try {\n      buildings.forEach(({ meetingRooms }: IBuildingsDataApiModel) => {\n        totalBuildings = iterate(totalBuildings);\n        if (meetingRooms && meetingRooms?.length) {\n          meetingRooms.forEach(({ meetings }: IMeetingRoomsApiModel) => {\n            totalRooms = iterate(totalRooms);\n            let isMeetingRoomAvailable = true;\n            if (meetings?.length) {\n              meetings.forEach((meeting: IMeetingsApiModel) => {\n                const { date: meetingDate } = meeting;\n\n                const todaysDate = timeNow.toLocaleDateString();\n                if (meetingDate === todaysDate) {\n                  totalMeetingsToday = iterate(totalMeetingsToday);\n                }\n\n                if (\n                  isMeetingsClashing(meeting, {\n                    date: timeNow,\n                    startTime: convertTimeToMinutes(\n                      timeNow?.toLocaleTimeString()\n                    ),\n                    endTime: convertTimeToMinutes(\n                      timeNow?.toLocaleTimeString()\n                    ),\n                  })\n                ) {\n                  isMeetingRoomAvailable = false;\n                }\n              });\n            }\n            if (isMeetingRoomAvailable) {\n              freeRooms = iterate(freeRooms);\n            } else {\n              totalMeetingsNow = iterate(totalMeetingsNow);\n            }\n          });\n        }\n      });\n\n      fieldsData = {\n        totalBuildings,\n        totalRooms,\n        freeRooms,\n        totalMeetingsToday,\n        totalMeetingsNow,\n      };\n\n      if (labelcardfields && labelcardfields?.length) {\n        labelcardfields.forEach((field) => {\n          let tempSubTexts: ISubText[] = [];\n          if (field?.subTexts?.length) {\n            tempSubTexts = getSubTextsWithValue(field?.subTexts, fieldsData);\n          }\n          tempLabelCardFields?.push({\n            ...field,\n            subTexts: tempSubTexts,\n          });\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      // expected output: ReferenceError: nonExistentFunction is not defined\n      // Note - error messages will vary depending on browser\n    }\n  }\n\n  return tempLabelCardFields;\n};\n\nexport const getAvailableRooms = (\n  building: IBuildingsDataApiModel,\n  meetingRoomForm: IMeetingRoomForm\n): IMeetingRoomsApiModel[] => {\n  let freeMeetingRooms: IMeetingRoomsApiModel[] = [];\n  const { meetingRooms } = building;\n\n  if (meetingRooms && meetingRooms?.length) {\n    meetingRooms.forEach((meetingRoom: IMeetingRoomsApiModel) => {\n      const { meetings } = meetingRoom;\n      let isMeetingRoomAvailable = true;\n      if (meetings && meetings?.length) {\n        meetings.forEach((meeting) => {\n          const date = dateFieldToEpoch(meetingRoomForm?.date?.value as string);\n          const startTime = convertTimeToMinutes(\n            meetingRoomForm?.startTime?.value as string\n          );\n          const endTime = convertTimeToMinutes(\n            meetingRoomForm?.endTime?.value as string\n          );\n          if (date && startTime && endTime) {\n            const meetingRoomSpecs: ITimeFrame = {\n              date,\n              startTime,\n              endTime,\n            };\n            if (isMeetingsClashing(meeting, meetingRoomSpecs)) {\n              isMeetingRoomAvailable = false;\n            }\n          }\n        });\n      }\n      if (isMeetingRoomAvailable) {\n        freeMeetingRooms.push(meetingRoom);\n      }\n    });\n  }\n\n  return freeMeetingRooms;\n};\n\nexport const isFieldValid = (\n  key: IFormFieldsKeys,\n  fieldData: IInputFieldsModel,\n  meetingRoomForm: IMeetingRoomForm\n): boolean => {\n  let isValidField: boolean = true;\n\n  if (!fieldData?.value) {\n    isValidField = false;\n\n    return isValidField;\n  }\n  switch (key) {\n    case \"date\":\n      const [year, month, day] = fieldData?.value.toString().split(\"-\");\n      const [tday, tmonth, tYear] = new Date().toLocaleDateString().split(\"/\");\n\n      if (\n        +new Date(`${month}/${day}/${year}`) <\n        +new Date(`${tmonth}/${tday}/${tYear}`)\n      ) {\n        isValidField = false;\n      }\n      break;\n    case \"startTime\":\n      {\n        const [stHours, stMinutes] = fieldData?.value.toString().split(\":\");\n        const [hoursNow, minutesNow] = new Date()\n          .toLocaleTimeString()\n          .split(\":\");\n        const now: number = 60 * Number(hoursNow) + Number(minutesNow);\n        const startTime: number = 60 * Number(stHours) + Number(stMinutes);\n        if (now > startTime) {\n          isValidField = false;\n        }\n      }\n      break;\n    case \"endTime\":\n      {\n        const [etHours, etMinutes] = fieldData?.value.toString().split(\":\");\n        const [stHours, stMinutes] =\n          meetingRoomForm?.startTime?.value?.toString().split(\":\") || [];\n        const [hoursNow, minutesNow] = new Date()\n          .toLocaleTimeString()\n          .split(\":\");\n        const now: number = 60 * Number(hoursNow) + Number(minutesNow);\n        const startTime: number = 60 * Number(stHours) + Number(stMinutes);\n        const endTime: number = 60 * Number(etHours) + Number(etMinutes);\n        if (now > endTime || startTime + MIN_MEETING_DURATION > endTime) {\n          isValidField = false;\n        }\n      }\n      break;\n  }\n\n  return isValidField;\n};\n","export const MEETING_ROOM_QUERY = `query FetchRoom($id:Int!)\n{\n  Building(id:$id)\n  {\n     id\n    name\n   meetingRooms\n    {\n      name\n      id\n      floor\n      building {\n        id\n        name\n      }\n      meetings{\n        startTime\n        endTime\n        date\n      }\n     \n    }\n   \n  }\n}`;\n\nexport const ADD_MEETING_QUERY = `mutation AddMeeting($id: Int!,$title: String!\n  $date: String!,\n  $startTime: String!,\n  $endTime: String!,\n  $meetingRoomId:Int!) {\n  Meeting(id: $id, title: $title,startTime: $startTime,endTime: $endTime,date: $date, meetingRoomId: $meetingRoomId) {\n    id\n    title\n    startTime\n    endTime\n    date\n\n  }\n}`;\n\nexport const MEETING_QUERY = `\nquery Meeting\n{\n  Meetings\n  {\n    title\n    date\n    startTime\n    endTime\n  }\n}`;\n\nexport const BUILDINGS_DATA_QUERY = `query Building {\n  Buildings {\n    name\n    id\n    meetingRooms {\n      id\n      name\n      floor\n      building {\n        id\n        name\n      }\n      meetings {\n        title\n        date\n        startTime\n        endTime\n      }\n    }\n  }\n}`;\n","export const convertTimeToMinutes = (time: string): number => {\n  if (time) {\n    const [hours, minutes] = time?.toString().split(\":\");\n    return 60 * Number(hours) + Number(minutes);\n  }\n  return 0;\n};\n\nexport const dateFieldToEpoch = (date: string): Date | undefined => {\n  if (date) {\n    const [year, month, day] = date?.toString().split(\"-\");\n    return new Date(`${month}/${day}/${year}`);\n  }\n  return;\n};\n\nexport const localeDateFieldToEpoch = (date: string): Date | undefined => {\n  if (date) {\n    const [day, month, year] = date?.toString().split(\"/\");\n    return new Date(`${month}/${day}/${year}`);\n  }\n  return;\n};\n\nexport const dateFieldToLocaleDate = (date: string): string | undefined => {\n  if (date) {\n    const [year, month, day] = date?.toString().split(\"-\");\n    return `${day}/${month}/${year}`;\n  }\n  return;\n};\n"],"names":["id","label","subTexts","className","handleClick","Box","component","display","flexDirection","onClick","Typography","length","map","index","key","subTextLabel","value","MIN_MEETING_DURATION","getDefaultMeetingRoomForm","Date","toLocaleDateString","split","day","month","year","toLocaleTimeString","hour","minutes","getTime","endTimeHour","endTimeMinutes","title","type","error","date","startTime","endTime","building","modalConfig","handleClose","vacantRooms","handleCardClick","bookMeeting","Modal","open","onClose","Fade","in","name","floor","LabelCard","selectedCardId","Button","size","meetingRoomForm","handleMeetingRoomForm","buildings","handleModalState","updateFormWithKey","fieldData","prevSpecs","alignItems","alignSelf","Object","entries","fieldKey","TextField","select","required","sx","m","minWidth","onChange","e","tempField","currentTarget","target","isValid","isFieldValid","todaysDate","toString","stHours","stMinutes","Number","etHours","etMinutes","tempEndTime","localeDateFieldToEpoch","uetHours","uetMinutes","handleFieldValueChange","MenuItem","forEach","isValidField","tempFieldData","validateMeetingDetailsForm","find","getAvailableRooms","snackbar","useContext","AppRootContext","appRootState","useState","setMeetingRoomForm","navigate","useNavigate","rooms","setModalConfig","useManualQuery","BUILDINGS_DATA_QUERY","fetchBuildings","buildingsData","data","MEETING_QUERY","fetchMeetings","MeetingsData","useMutation","ADD_MEETING_QUERY","addMeetingRequest","useEffect","Buildings","prevState","prevConfig","payload","Meetings","meetingRoomId","dateFieldToLocaleDate","variables","then","catch","iterate","field","iterator","isMeetingsClashing","meeting","timeFrame","meetingDate","requiredDate","requiredDateEpoch","Math","meetingStartTimeSeconds","meetingEndTimeSeconds","requiredStartTimeEpoch","requiredEndTimeEpoch","hours","toBuildingDataApiTransform","labelcardfields","fieldsData","tempLabelCardFields","totalBuildings","totalRooms","freeRooms","totalMeetingsToday","totalMeetingsNow","timeNow","meetingRooms","meetings","isMeetingRoomAvailable","convertTimeToMinutes","tempSubTexts","homePageFields","subText","tempSubText","push","getSubTextsWithValue","console","freeMeetingRooms","meetingRoom","dateFieldToEpoch","tday","tmonth","tYear","hoursNow","minutesNow","now","time"],"sourceRoot":""}